<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="doctg.xsl" ?>
<testgroup 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://www.openscdp.org/schema/testframework-1.0.xsd"
	id="tg_case_2" arrayElement="testcase,function" arrayIndex="id,Name">
	<name>CASE 2 APDUs</name>
	<description>
		<p>
			This testgroup checks the functionality of the applet using case 2 APDUs.
			
		</p>
	</description>
	<reference>
		<p></p>
	</reference>

<!-- Initializing the test group environment -->

	<constructor Param="name, parameter">
		<Script><![CDATA[
			TestGroup.call(this, name, parameter);
		]]></Script>
	</constructor>


	
<!-- Setup method called before each test case is executed -->
	<setup>
		<Script><![CDATA[
			var aid = new ByteString("E82B0601040181C31F0202", HEX);

			this.card = new Card(_scsh3.reader);
			this.card.reset(Card.RESET_COLD);

			// Select application
			var rsp = this.card.sendApdu(0x00, 0xA4, 0x04, 0x04, aid, 0x00, [0x9000]);

			var a = new ASN1(rsp);
			var info = a.find(0x89).value;

			var intf = info.byteAt(0) & 0xF0;
			var intfname = "Unknown interface type";
			if (intf == 0) {
				intfname = "Contact interface";
			} else if (intf == 8) {
				intfname = "Contactless Type A";
			} else if (intf == 7) {
				intfname = "Contactless Type B";
			}
    
			print(intfname + " with IFSC=" + info.bytes(1,2).toUnsigned() + " IFSD=" + info.bytes(3,2).toUnsigned());

		]]></Script>
	</setup>


	
<!-- Teardown method called after each test case is executed -->
	<teardown>
		<Script><![CDATA[	
		]]></Script>
	</teardown>

	
	
	<testcase id="001.CASE2.SHORT">
		<name>Case 2 Short APDU</name>
		<description>
			<p>.</p>
		</description>
		<requirement>
			<p></p>
		</requirement>
		<reference>
			<p></p>
		</reference>
		<Script><![CDATA[
			
			// Case 2 short - request 250 bytes
			var rsp = this.card.sendApdu(0x00, 0xF2, 0x00, 0xFA, 0x00, [0x9000]);
			assert(rsp.length == 250);

			var infoBlock = this.card.sendApdu(0x00, 0xF0, 0x00, 0x00, 0x00, [0x9000]);
			print(strInfo(infoBlock));
				
			]]></Script>
	</testcase>	
	
	
	
	<testcase id="002.CASE2.EXTENDED">
		<name>Case 2 Extended APDU</name>
		<description>
			<p>.</p>
		</description>
		<requirement>
			<p></p>
		</requirement>
		<reference>
			<p></p>
		</reference>
		<Script><![CDATA[
			
			// Case 2 extended - request maxADPU bytes
			var p1 = this.parameter.maxAPDU >> 8;
			var p2 = this.parameter.maxAPDU & 0xFF;

			var rsp = this.card.sendApdu(0x00, 0xF2, p1, p2, 65536, [0x9000]);
			assert(rsp.length == this.parameter.maxAPDU);
			
			var infoBlock = this.card.sendApdu(0x00, 0xF0, 0x00, 0x00, 0x00, [0x9000]);
			print(strInfo(infoBlock));

			]]></Script>
	</testcase>	
	
	
	
	<testcase id="003.CASE2.EXCEPTIONS">
		<name>Case 2 APDU Exeptions</name>
		<description>
			<p>.</p>
		</description>
		<requirement>
			<p></p>
		</requirement>
		<reference>
			<p></p>
		</reference>
		<Script><![CDATA[
			
			this.card.sendApdu(0x00, 0xF2, 0x00, 0xFA, new ByteString("FOO", ASCII), 0x00, [0x6700]);
			
			var rsp = this.card.sendApdu(0x00, 0xF2, 0x00, 0x00, 0x00, [0x9000]);
			
			var rsp = this.card.sendApdu(0x00, 0xF2, 0x00, 0x00, 0x20, [0x6282]);
			assert(rsp.length == 0);
			
			var rsp = this.card.sendApdu(0x00, 0xF2, 0x00, 0x10, 0x20, [0x6282]);
			assert(rsp.length == 0x10);
				
			]]></Script>
	</testcase>



	<testcase id="010.CASE2.MAXSHORTAPDU">
		<name>Determine maximum Case 2S APDU length</name>
		<description>
			<p>.</p>
		</description>
		<requirement>
			<p></p>
		</requirement>
		<reference>
			<p></p>
		</reference>
		<Script><![CDATA[
			
			for (var len = 1; len <= 256; len++) {
				var p1 = len >> 8;
				var p2 = len & 0xFF;
				var rsp = this.card.sendApdu(0x00, 0xF2, p1, p2, 0x00, [0x9000]);
				assert(rsp.length == len);

				var infoBlock = this.card.sendApdu(0x00, 0xF0, 0x00, 0x00, 0x00, [0x9000]);
				print(strInfo(infoBlock));
			}

			]]></Script>
	</testcase>



	<testcase id="011.CASE2.MAXEXTAPDU">
		<name>Determine maximum Case 2E APDU length</name>
		<description>
			<p>.</p>
		</description>
		<requirement>
			<p></p>
		</requirement>
		<reference>
			<p></p>
		</reference>
		<Script><![CDATA[
			
			var incr = 1;

			for (var len = 250; len <= this.parameter.maxAPDU; len += incr) {
				var p1 = len >> 8;
				var p2 = len & 0xFF;
				var rsp = this.card.sendApdu(0x00, 0xF2, p1, p2, 0x10000, [0x9000]);
				assert(rsp.length == len);

				var infoBlock = this.card.sendApdu(0x00, 0xF0, 0x00, 0x00, 0x00, [0x9000]);
				print(strInfo(infoBlock));
				
				if (len > 512) {
					incr = 16;
				}
			}

			]]></Script>
	</testcase>
	
</testgroup>
